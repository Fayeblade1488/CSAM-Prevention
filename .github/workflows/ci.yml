name: CI - Build, Lint, and Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  lint:
    name: Lint with Ruff and Mypy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -e ".[dev]"

      - name: Lint with Ruff
        run: |
          ruff check src/ tests/ --output-format=github
        continue-on-error: true

      - name: Check formatting with Ruff
        run: |
          ruff format --check src/ tests/
        continue-on-error: true

      - name: Type check with Mypy
        run: |
          mypy src/ --ignore-missing-imports --no-strict-optional
        continue-on-error: true

  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -e ".[dev]"

      - name: Run tests with coverage
        run: |
          pytest -v --cov=csam_guard --cov-report=xml --cov-report=term-missing
        env:
          DISABLE_NLP: "1"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: matrix.python-version == '3.11'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile.api
          push: false
          tags: csam-guard:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
